name: Terraform EC2 Deployment

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use the AWS_ACCESS_KEY_ID secret
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use the AWS_SECRET_ACCESS_KEY secret
        aws-region: ${{ secrets.AWS_REGION }}  # Use the AWS_REGION secret

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0  # Replace with your desired Terraform version

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Output Public IP
      run: |
        echo "EC2 Public IP: $(terraform output -raw public_ip)"

  destroy:
    runs-on: ubuntu-latest
    needs: deploy  # Ensure this job runs after the deploy job (optional)
    if: github.event_name == 'workflow_dispatch'  # Only run this job when manually triggered

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0  # Replace with your desired Terraform version

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
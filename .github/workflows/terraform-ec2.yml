name: Manage EC2 Instance

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (create or delete)'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - delete

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use the AWS_ACCESS_KEY_ID secret
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use the AWS_SECRET_ACCESS_KEY secret
        aws-region: ${{ secrets.AWS_REGION }}  # Use the AWS_REGION secret

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0  # Replace with your desired Terraform version

    - name: Terraform Init
      run: terraform init

    - name: Debug Input
      run: |
        echo "Action: ${{ github.event.inputs.action }}"

    - name: List Terraform Resources
      run: terraform state list

    - name: Create Instance
      if: ${{ github.event.inputs.action == 'create' }}
      run: terraform apply -auto-approve

    - name: Output Public IP
      if: ${{ github.event.inputs.action == 'create' }}
      run: |
        echo "EC2 Public IP: $(terraform output -raw public_ip)"

    - name: Import Existing Instance
      if: ${{ github.event.inputs.action == 'delete' }}
      run: terraform import aws_instance.my_ec2_instance <instance-id>

    - name: Destroy Instance
      if: ${{ github.event.inputs.action == 'delete' }}
      run: terraform destroy -auto-approve